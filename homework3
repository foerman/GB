#1. Реализовать функцию, принимающую два числа (позиционные аргументы) и выполняющую их деление. Числа запрашивать у пользователя, предусмотреть обработку ситуации деления на ноль.

num = input('Введите два числа: ').split()
num1 = int(num[0])
num2 = int(num[1])
print(num1)
print(num2)

def divide(a, b):
  if b == 0:
    print('Нельзя делить на ноль' )
    return
  else:
    res = a / b
    return res  

print(divide(num1, num2))


#2. Выполнить функцию, которая принимает несколько параметров, описывающих данные пользователя: имя, фамилия, год рождения, город проживания, email, телефон. Функция должна принимать параметры как именованные аргументы. Осуществить вывод данных о пользователе одной строкой.

def data_list(name, sname, bd, city, email, tel):
  return f'Имя: {name}, Фамилия: {sname}, Год рождения: {bd}, Город проживания: {city}, Email: {email}, Телефон: {tel}'

name = input('Введите Имя: ')
sname = input('Введите Фамилию: ')
bd = input('Введите Год рождения: ')
city = input('Введите Город проживания: ')
email = input('Введите Email: ')
tel = input('Введите Телефон: ')

print(data_list(name, sname, bd, city, email, tel))


#3. Реализовать функцию my_func(), которая принимает три позиционных аргумента и возвращает сумму наибольших двух аргументов.

def my_func(a, b, c):
  sort = sorted([a, b, c])
  summa = sum(sort[1:])
  return summa

print(my_func(5, 7, 3))


#4. Программа принимает действительное положительное число x и целое отрицательное число y. Выполните возведение числа x в степень y. Задание реализуйте в виде функции my_func(x, y). При решении задания нужно обойтись без встроенной функции возведения числа в степень.
#Подсказка: попробуйте решить задачу двумя способами. Первый — возведение в степень с помощью оператора **. Второй — более сложная реализация без оператора **, предусматривающая использование цикла.

def my_func(x, y):
  res = x ** y
  return res

print(my_func(5, -5))  

#5. Программа запрашивает у пользователя строку чисел, разделённых пробелом. При нажатии Enter должна выводиться сумма чисел. Пользователь может продолжить ввод чисел, разделённых пробелом и снова нажать Enter. Сумма вновь введённых чисел будет добавляться к уже подсчитанной сумме.
#Но если вместо числа вводится специальный символ, выполнение программы завершается. Если специальный символ введён после нескольких чисел, то вначале нужно добавить сумму этих чисел к полученной ранее сумме и после этого завершить программу.

def summa():
  summ = 0
  while True:
    numbers = input('Введите числа для подсчета суммы, для завершения введите "stop": ').split()
    for num in numbers:
      if num.lower() == 'stop':
        return summ
      else:
        summ = summ + int(num)
    print(f'Сумма чисел равна {summ}')

print('Сумма чисел равна:', summa())

#6. Реализовать функцию int_func(), принимающую слова из маленьких латинских букв и возвращающую их же, но с прописной первой буквой. Например, print(int_func(‘text’)) -> Text.
#7. Продолжить работу над заданием. В программу должна попадать строка из слов, разделённых пробелом. Каждое слово состоит из латинских букв в нижнем регистре. Нужно сделать вывод исходной строки, но каждое слово должно начинаться с заглавной буквы. Используйте написанную ранее функцию int_func().

def int_func():
  word_list = input('Введите слова через пробел: ').lower().split()
  for word in word_list:
    lenn = 0
    for ch in word:
      if 97 <= ord(ch) <= 122:
        lenn = lenn + 1
    if lenn == len(word):
      print(word.title())

int_func()       

#end
